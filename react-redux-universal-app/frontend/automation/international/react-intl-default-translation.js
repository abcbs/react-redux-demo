import fs   from 'fs'
import path from 'path'

import { sync as glob_sync } from 'glob'

// project root folder
const Root_folder = path.resolve(__dirname, '../../..')

const messages_pattern  = path.resolve(Root_folder, './frontend/build/messages/**/*.json')
const translations_path = path.resolve(Root_folder, './frontend/code/international/translations/messages')

// Aggregates the default messages that were extracted from the example app's
// React components via the React Intl Babel plugin. An error will be thrown if
// there are messages in different components that use the same `id`. The result
// is a flat collection of `id: message` pairs for the app's default locale.
const defaultMessages = glob_sync(messages_pattern)
	.map(filename => fs.readFileSync(filename, 'utf8'))
	.map(file => JSON.parse(file))
	.reduce((collection, descriptors) =>
	{
		descriptors.forEach(({id, defaultMessage}) =>
		{
			if (collection.hasOwnProperty(id))
			{
				throw new Error(`Duplicate message id: ${id}`)
			}

			collection[id] = defaultMessage
		})

		return collection
	},
	{})

// output the combined translation file
//
// this file is autogenerated by react-intl Babel plugin
// from defaultMessages({}) function calls in React components
// (do not edit this file, the changes to it will be lost)
//
fs.writeFileSync(path.join(translations_path, 'en.json'), JSON.stringify(defaultMessages))